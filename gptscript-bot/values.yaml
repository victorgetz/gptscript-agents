global:
  env:
    #GPT script combined agent file creation
    AGENTS_REGISTRY_URL: "https://github.com/victorgetz/gptscript-agents/blob/main/agents"
    GITHUB_BASH_URL: "https://github.com/victorgetz/gptscript-agents/blob/main/execute.sh?raw=true"
    MERGED_AGENT_FILE: "/scripts/combined.gpt"

    #GPT Script
    OPENAI_API_KEY: "sk-5568e054ae6b445db8a28b7ccf5942d8"
    OPENAI_BASE_URL: "https://ai.iits.tech/backend/api"

    #GIT
    #BOT_TOKEN="$GPTSCRIPT_BOT_TOKEN"
    #GIT_URL="https://$BOT_TOKEN:$BOT_TOKEN@$CI_SERVER_HOST/$CI_PROJECT_PATH.git"
    #BOT_EMAIL="gptscript-bot@iits-consulting.de"
    #BOT_NAME="gptscript-bot"
    #COMMIT_REF="$CI_COMMIT_REF_NAME"

jobs:
  fix-prometheus-alerts:
    createCronJob: false
    image: "chainguard/gptscript:latest"
    commands:
      - command: "Curl this endpoint http://prometheus-stack-prometheus.monitoring.svc.cluster.local:9090/prometheus/api/v1/alerts to get the current prometheus alerts. 
                  For each of the unresolved issues gather the informations and save it into this file tmp/prometheus-errors.txt"
        model: "gpt-4o"
      #      - command: "Read the file tmp/prometheus-errors.txt which describes the current kubernetes cluster issues.
      #                  Investigate the root cause the a solution for this problem. For finding a solution to the issues take also a look at the affected container logs.
      #                  Write down your result into this file tmp/prometheus-solution.txt"
      #        agents: "base.gpt, kubectl.gpt, curl.gpt, cat.gpt"
      #        model: "gpt-4o"
      - command: "Read the file tmp/prometheus-errors.txt and post the content to this slack webhook url https://hooks.slack.com/services/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."
        model: "gpt-4o"
#  print-pod-names:
#    createCronJob: false
#    image: "chainguard/gptscript:latest"
#    commands:
#      - command: "Give me the names of all the pods in the current namespace"
#        model: "gpt-4o"
#  check-container-are-signed:
#    createCronJob: false
#    image: "chainguard/gptscript:latest"
#    commands:
#      - command: "Are the kubernetes container inside the current namespace are signed?"
#        model: "gpt-4o"