{{- range $jobName, $job := .Values.jobs }}
{{- if $job.createCronJob }}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ $jobName }}
spec:
  schedule: "{{ $job.schedule }}"
  jobTemplate:
    spec:
      activeDeadlineSeconds: 600
      template:
        spec:
          serviceAccountName: {{ include "gptscript-bot.fullname" $ }}
          containers:
            - name: {{ $jobName }}
              image: {{ $job.image }}
              env:
                - name: COMMANDS_JSON
                  value: '{{ tpl ($job.commands | toJson) $}}'
              envFrom:
                - secretRef:
                    name: {{ include "gptscript-bot.fullname" $ }}-{{ $jobName }}-secret
              volumeMounts:
                - name: commands
                  mountPath: /config
                  subPath: commands.json
                - name: script
                  mountPath: /scripts
              command: ["/scripts/run_gptscript.sh"]
          volumes:
            - name: commands
              secret:
                secretName: {{ include "gptscript-bot.fullname" $ }}-{{ $jobName }}-secret
                defaultMode: 500
            - name: script
              configMap:
                name: {{ include "gptscript-bot.fullname" $ }}-config
                defaultMode: 500
          restartPolicy: OnFailure
---
{{- else }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ $jobName }}
spec:
  activeDeadlineSeconds: 600
  template:
    spec:
      serviceAccountName: {{ include "gptscript-bot.fullname" $ }}
      containers:
        - name: {{ $jobName }}
          image: {{ $job.image }}
          env:
            - name: COMMANDS_JSON
              value: '{{ tpl ($job.commands | toJson) $}}'
          envFrom:
            - secretRef:
                name: {{ include "gptscript-bot.fullname" $ }}-{{ $jobName }}-secret
          volumeMounts:
            - name: commands
              mountPath: /config
              subPath: commands.json
            - name: script
              mountPath: /scripts
          command: ["/scripts/run_gptscript.sh"]
      volumes:
        - name: commands
          secret:
            secretName: {{ include "gptscript-bot.fullname" $ }}-{{ $jobName }}-secret
            defaultMode: 500
        - name: script
          configMap:
            name: {{ include "gptscript-bot.fullname" $ }}-config
            defaultMode: 500
      restartPolicy: OnFailure
---
{{- end }}
{{- end }}
